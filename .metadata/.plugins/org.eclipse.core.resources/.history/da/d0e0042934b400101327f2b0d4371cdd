package com.ecommerce.app.controller;
import com.ecommerce.app.dto.*;
import com.ecommerce.app.model.User;
import com.ecommerce.app.repository.UserRepository;
import com.ecommerce.app.security.JwtTokenProvider;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.*;
import org.springframework.web.bind.annotation.*;
import java.util.stream.Collectors;

@RestController
@RequestMapping("/api/auth")
public class AuthController {
    private final AuthenticationManager authManager;
    private final JwtTokenProvider jwtProvider;
    private final UserRepository userRepo;

    @Autowired
    public AuthController(AuthenticationManager authManager, JwtTokenProvider jwtProvider, UserRepository userRepo){
        this.authManager=authManager; this.jwtProvider=jwtProvider; this.userRepo=userRepo;
    }

    @PostMapping("/login")
    public ResponseEntity<?> login(@RequestBody LoginRequest request){
        try{
            authManager.authenticate(new UsernamePasswordAuthenticationToken(request.getEmail(), request.getPassword()));
            User u = userRepo.findByEmail(request.getEmail()).orElseThrow();
            String roles = u.getRoles().stream().map(r->r.getName()).collect(Collectors.joining(","));
            String token = jwtProvider.generateToken(u.getEmail(), roles);
            return ResponseEntity.ok(new LoginResponse(token, roles,"Login successful"));
        }catch(Exception e){
            return ResponseEntity.status(401).body(new LoginResponse(null,null,"Invalid email/password"));
        }
    }
}
